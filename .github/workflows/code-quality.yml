name: Code quality and sanity

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  clippy:
    name: Lint with Clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v3

      - name: Make the USER own the working directory. Installing `gssapi` headers
        run: |
          sudo chown -R $USER:$USER ${{ github.workspace }}
          sudo apt -y install gcc libgssapi-krb5-2 libkrb5-dev libsasl2-modules-gssapi-mit

      - name: Caching project dependencies
        id: project-cache
        uses: Swatinem/rust-cache@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - run: cargo clippy --workspace --all-targets --verbose --all-features
  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make the USER own the working directory. Installing `gssapi` headers
        run: |
          sudo chown -R $USER:$USER ${{ github.workspace }}
          sudo apt -y install gcc libgssapi-krb5-2 libkrb5-dev libsasl2-modules-gssapi-mit

      - name: Caching project dependencies
        id: project-cache
        uses: Swatinem/rust-cache@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt

      - run: cargo fmt --all -- --check

  check-rustdoc-links:
    name: Check intra-doc links
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate: [canyon_connection, canyon_crud, canyon_macros, canyon_observer, canyon_sql]
    steps:
      - uses: actions/checkout@v3

      - name: Make the USER own the working directory. Installing `gssapi` headers
        run: |
          sudo chown -R $USER:$USER ${{ github.workspace }}
          sudo apt -y install gcc libgssapi-krb5-2 libkrb5-dev libsasl2-modules-gssapi-mit

      - name: Caching project dependencies
        id: project-cache
        uses: Swatinem/rust-cache@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly

      - run: cargo rustdoc --target=x86_64-unknown-linux-gnu -p ${{ matrix.crate }} --all-features -- -D warnings
